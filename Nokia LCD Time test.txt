# Nokia LCD Time test
# by Bob Davis
# Based on code found on Internet 
# 5/5/2016

import time
import RPi.GPIO as GPIO
import spidev

contrast=0xc4
ROWS = 6
COLUMNS = 14
PIXELS_PER_ROW = 6
spi = spidev.SpiDev()

# gpio's :
DC   = 23 # gpio BCM pin 23
RST  = 24 # gpio BCM pin 24
# SPI connections
SCE  = 8  # gpio CE0 BCM 8)
SCLK = 11 # gpio SCLK BCM 11)
DIN  = 10 # gpio MOSI BCM 10)
CLSBUF=[0]*(ROWS * COLUMNS * PIXELS_PER_ROW)

font = {
  ' ': [0x00, 0x00, 0x00, 0x00, 0x00],
  '0': [0x3e, 0x51, 0x49, 0x45, 0x3e],
  '1': [0x00, 0x42, 0x7f, 0x40, 0x00],
  '2': [0x42, 0x61, 0x51, 0x49, 0x46],
  '3': [0x21, 0x41, 0x45, 0x4b, 0x31],
  '4': [0x18, 0x14, 0x12, 0x7f, 0x10],
  '5': [0x27, 0x45, 0x45, 0x45, 0x39],
  '6': [0x3c, 0x4a, 0x49, 0x49, 0x30],
  '7': [0x01, 0x71, 0x09, 0x05, 0x03],
  '8': [0x36, 0x49, 0x49, 0x49, 0x36],
  '9': [0x06, 0x49, 0x49, 0x29, 0x1e],
  'A': [0x7e, 0x11, 0x11, 0x11, 0x7e],
  'B': [0x7f, 0x49, 0x49, 0x49, 0x36],
  'C': [0x3e, 0x41, 0x41, 0x41, 0x22],
  'D': [0x7f, 0x41, 0x41, 0x22, 0x1c],
  'E': [0x7f, 0x49, 0x49, 0x49, 0x41],
  'F': [0x7f, 0x09, 0x09, 0x09, 0x01],
  'G': [0x3e, 0x41, 0x49, 0x49, 0x7a],
  'H': [0x7f, 0x08, 0x08, 0x08, 0x7f],
  'I': [0x00, 0x41, 0x7f, 0x41, 0x00],
  'J': [0x20, 0x40, 0x41, 0x3f, 0x01],
  'K': [0x7f, 0x08, 0x14, 0x22, 0x41],
  'L': [0x7f, 0x40, 0x40, 0x40, 0x40],
  'M': [0x7f, 0x02, 0x0c, 0x02, 0x7f],
  'N': [0x7f, 0x04, 0x08, 0x10, 0x7f],
  'O': [0x3e, 0x41, 0x41, 0x41, 0x3e],
  'P': [0x7f, 0x09, 0x09, 0x09, 0x06],
  'Q': [0x3e, 0x41, 0x51, 0x21, 0x5e],
  'R': [0x7f, 0x09, 0x19, 0x29, 0x46],
  'S': [0x46, 0x49, 0x49, 0x49, 0x31],
  'T': [0x01, 0x01, 0x7f, 0x01, 0x01],
  'U': [0x3f, 0x40, 0x40, 0x40, 0x3f],
  'V': [0x1f, 0x20, 0x40, 0x20, 0x1f],
  'W': [0x3f, 0x40, 0x38, 0x40, 0x3f],
  'X': [0x63, 0x14, 0x08, 0x14, 0x63],
  'Y': [0x07, 0x08, 0x70, 0x08, 0x07],
  'Z': [0x61, 0x51, 0x49, 0x45, 0x43],
  'a': [0x20, 0x54, 0x54, 0x54, 0x78],
  'b': [0x7f, 0x48, 0x44, 0x44, 0x38],
  'c': [0x38, 0x44, 0x44, 0x44, 0x20],
  'd': [0x38, 0x44, 0x44, 0x48, 0x7f],
  'e': [0x38, 0x54, 0x54, 0x54, 0x18],
  'f': [0x08, 0x7e, 0x09, 0x01, 0x02],
  'g': [0x0c, 0x52, 0x52, 0x52, 0x3e],
  'h': [0x7f, 0x08, 0x04, 0x04, 0x78],
  'i': [0x00, 0x44, 0x7d, 0x40, 0x00],
  'j': [0x20, 0x40, 0x44, 0x3d, 0x00],
  'k': [0x7f, 0x10, 0x28, 0x44, 0x00],
  'l': [0x00, 0x41, 0x7f, 0x40, 0x00],
  'm': [0x7c, 0x04, 0x18, 0x04, 0x78],
  'n': [0x7c, 0x08, 0x04, 0x04, 0x78],
  'o': [0x38, 0x44, 0x44, 0x44, 0x38],
  'p': [0x7c, 0x14, 0x14, 0x14, 0x08],
  'q': [0x08, 0x14, 0x14, 0x18, 0x7c],
  'r': [0x7c, 0x08, 0x04, 0x04, 0x08],
  's': [0x48, 0x54, 0x54, 0x54, 0x20],
  't': [0x04, 0x3f, 0x44, 0x40, 0x20],
  'u': [0x3c, 0x40, 0x40, 0x20, 0x7c],
  'v': [0x1c, 0x20, 0x40, 0x20, 0x1c],
  'w': [0x3c, 0x40, 0x30, 0x40, 0x3c],
  'x': [0x44, 0x28, 0x10, 0x28, 0x44],
  'y': [0x0c, 0x50, 0x50, 0x50, 0x3c],
  'z': [0x44, 0x64, 0x54, 0x4c, 0x44],
  '{': [0x00, 0x08, 0x36, 0x41, 0x00],
  '|': [0x00, 0x00, 0x7f, 0x00, 0x00],
  '}': [0x00, 0x41, 0x36, 0x08, 0x00],
  '~': [0x10, 0x08, 0x08, 0x10, 0x08],
  "'": [0x00, 0x05, 0x03, 0x00, 0x00],
  '(': [0x00, 0x1c, 0x22, 0x41, 0x00],
  ')': [0x00, 0x41, 0x22, 0x1c, 0x00],
  '*': [0x14, 0x08, 0x3e, 0x08, 0x14],
  '+': [0x08, 0x08, 0x3e, 0x08, 0x08],
  ',': [0x00, 0x50, 0x30, 0x00, 0x00],
  '-': [0x08, 0x08, 0x08, 0x08, 0x08],
  '.': [0x00, 0x60, 0x60, 0x00, 0x00],
  '/': [0x20, 0x10, 0x08, 0x04, 0x02],
  ':': [0x00, 0x36, 0x36, 0x00, 0x00],
  ';': [0x00, 0x56, 0x36, 0x00, 0x00],
  '<': [0x08, 0x14, 0x22, 0x41, 0x00],
  '=': [0x14, 0x14, 0x14, 0x14, 0x14],
  '>': [0x00, 0x41, 0x22, 0x14, 0x08],
  '!': [0x00, 0x00, 0x5f, 0x00, 0x00],
  ',': [0x00, 0x50, 0x30, 0x00, 0x00],
  '-': [0x08, 0x08, 0x08, 0x08, 0x08],
  '.': [0x00, 0x60, 0x60, 0x00, 0x00],
  '?': [0x02, 0x01, 0x51, 0x09, 0x06],
  '`': [0x00, 0x01, 0x02, 0x04, 0x00],
  }
def setup():
  # Set pin directions.
  GPIO.setmode(GPIO.BCM)
  GPIO.setup(DC,GPIO.OUT)
  GPIO.setup(RST,GPIO.OUT)
  spi.open(0,0)
  spi.max_speed_hz=5000000

def gotoxy(x, y): 
  GPIO.output(DC, False)
  spi.writebytes([x+128,y+64])

def cls():
  gotoxy(0, 0)
  GPIO.output(DC, True)
  spi.writebytes(CLSBUF)

def init():
  setup()
  # Toggle RST low to reset.
  GPIO.output(RST, False)
  time.sleep(0.100)
  GPIO.output(RST, True)
  # Extended mode, bias, vop, basic mode, non-inverted display.
  GPIO.output(DC, False)
  spi.writebytes([0x21, 0x14, contrast, 0x20, 0x0c])

def text(string):
  for char in string:
    display_char(char)

def display_char(char):
  try:
    GPIO.output(DC, True)
    spi.writebytes(font[char]+[0])
  except KeyError:
    pass # Ignore undefined characters.

def main():
  init()
  cls()
  #Convert time and date to strings
  times=time.strftime('%H:%M:%S')
  dates=time.strftime('%D')
  text("This is a test of the Nokia  by Bob Davis Time and Date:")
  text("   "+times)
  text("      "+dates)
  print 'Nokia LCD Updated'
  print

if __name__ == '__main__':
  main()

To display the values of an MCP3008 analog input ports you will need to add these lines near the top of the program.  This uses the alternate arrangement of pins to not use the SPI pins.

# MCP3008 lines
GPIO.setmode(GPIO.BCM)
GPIO.setup(17, GPIO.OUT) # Replaces CE0
GPIO.setup(18, GPIO.IN)  # Replaces MISO
GPIO.setup(27, GPIO.OUT) # Replaces MOSI 
GPIO.setup(22, GPIO.OUT) # Replaces Sclock

Then add this routine near the bottom.

def readport(port): # Alternate pins
  GPIO.output(17, GPIO.HIGH) # deselect chip
  GPIO.output(22, GPIO.LOW) # set clock low
  adcin=0
  for shift in range (0,24): # 24 pits shifted
    GPIO.output(17, GPIO.LOW) # select chip
    GPIO.output(27, GPIO.LOW) # low for most bits
    if (shift==7 or shift==8): 
      GPIO.output(27, GPIO.HIGH)
    if (shift==9)and(port & 0x04): 
      GPIO.output(27, GPIO.HIGH)
    if (shift==10)and(port & 0x02): 
      GPIO.output(27, GPIO.HIGH)
    if (shift==11)and(port & 0x01): 
      GPIO.output(27, GPIO.HIGH)
    if (shift > 13)and(GPIO.input(18)):
      adcin = adcin+1 # set bit
    adcin = adcin << 1  # left shift 1
    GPIO.output(22, GPIO.LOW) # cycle the clock
    GPIO.output(22, GPIO.HIGH) 
  return (adcin)  

Finally change the text lines in main() to look like this.

def main():
  init()
  cls()
  #Convert time and date to strings
  analog1=(readport(0))  # Range 0-1024 
  analog2=(readport(1))
  analog3=(readport(2))   
  analog4=(readport(3))
  times=time.strftime('%H:%M:%S')
  dates=time.strftime('%D')
  text(" Nokia Analog")
  gotoxy (0,1)
  text("by Bob DavisII")
  gotoxy (0,2)
  text("Analog 1 "+str(analog1))
  gotoxy (0,3)
  text("Analog 2 "+str(analog2))
  gotoxy (0,4)
  text("Analog 3 "+str(analog3))
  gotoxy (0,5)
  text("Analog 4 "+str(analog4))
  print 'Nokia LCD Updated'
  print
