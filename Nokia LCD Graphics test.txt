# Nokia LCD Graphics test
# by Bob Davis
# 5/5/2016

import time
import RPi.GPIO as GPIO
import spidev

contrast=0xc4
ROWS = 6
COLUMNS = 14
PIXELS_PER_ROW = 6
spi = spidev.SpiDev()

# gpio's :
DC   = 23 # gpio BCM 23
RST  = 24 # gpio BCM 24
# SPI connections
SCE  = 8  # gpio CE0 BCM 8)
SCLK = 11 # gpio SCLK BCM 11)
DIN  = 10 # gpio MOSI BCM 10)
CLSBUF=[0]*(ROWS * COLUMNS * PIXELS_PER_ROW)

image =[ # Left side top to bottom
  0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, # First column
  0x41, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x49, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x49, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x7a, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x7f, 0x00, 0x00, 0x00, 0xf0, 0x00,
  0x09, 0x00, 0x00, 0x00, 0xff, 0x00, 
  0x19, 0x00, 0x00, 0xf0, 0xff, 0x00,
  0x29, 0x00, 0x00, 0xff, 0xff, 0x00, # 10th column
  0x46, 0x00, 0x00, 0xff, 0xff, 0x00,
  0x00, 0x00, 0x00, 0xff, 0xff, 0x00,
  0x7e, 0x00, 0xf0, 0xff, 0xff, 0x00,
  0x11, 0x00, 0xff, 0xff, 0xff, 0x00,
  0x11, 0xf0, 0x0f, 0xff, 0xff, 0x00,
  0x11, 0xf0, 0x00, 0xff, 0xff, 0x01,
  0x7e, 0x30, 0x00, 0xff, 0xff, 0x03,
  0x00, 0x30, 0x00, 0xff, 0xff, 0x07,
  0x7f, 0x30, 0x00, 0xff, 0xff, 0x0f,
  0x09, 0x30, 0x00, 0xff, 0xff, 0x1f, # 20th column
  0x09, 0x30, 0x00, 0xff, 0xff, 0x3f,
  0x09, 0x30, 0x00, 0xff, 0xff, 0x7f,
  0x06, 0x30, 0x00, 0xff, 0xff, 0x7f,
  0x00, 0x30, 0x00, 0xff, 0xff, 0x7f,
  0x7f, 0x30, 0x00, 0xff, 0xff, 0x7f,
  0x08, 0x30, 0x00, 0xff, 0xff, 0x7f,
  0x08, 0x30, 0x00, 0xff, 0xff, 0x7f,
  0x08, 0x30, 0x00, 0xff, 0xff, 0x3f,
  0x7f, 0x30, 0x00, 0xff, 0xff, 0x1f,
  0x00, 0x30, 0x00, 0xff, 0xff, 0x0f, # 30th column
  0x00, 0x30, 0x00, 0xff, 0xff, 0x07,
  0x41, 0x30, 0x00, 0xff, 0xff, 0x03,
  0x7f, 0x30, 0x00, 0xff, 0xff, 0x01,
  0x41, 0x30, 0x00, 0xff, 0xff, 0x00,
  0x00, 0xf0, 0xff, 0xff, 0xff, 0x00,
  0x00, 0xf0, 0xff, 0xff, 0xff, 0x00,
  0x3e, 0x30, 0x00, 0xff, 0xff, 0x00,
  0x41, 0x30, 0x00, 0xff, 0xff, 0x00,
  0x41, 0x30, 0x00, 0xff, 0xff, 0x00, 
  0x41, 0x30, 0x00, 0xff, 0xff, 0x00, # 40th column
  0x22, 0x30, 0x00, 0xff, 0xff, 0x00,
  0x00, 0x30, 0x00, 0xff, 0xff, 0x00,
  0x46, 0x30, 0x00, 0xff, 0xff, 0x00,
  0x49, 0x30, 0x00, 0xff, 0xff, 0x00,
  0x49, 0x30, 0x00, 0xff, 0xff, 0x00,
  0x49, 0x30, 0x00, 0xff, 0xff, 0x00,
  0x31, 0x30, 0x00, 0xff, 0xff, 0x00,
  0x00, 0x30, 0x00, 0xff, 0xff, 0x00, 
  0x00, 0x30, 0x00, 0xff, 0xff, 0x00,
  0x00, 0x30, 0x00, 0xff, 0xff, 0x00, # 50th column
  0x00, 0x30, 0x00, 0xff, 0xff, 0x01,
  0x00, 0x30, 0x00, 0xff, 0xff, 0x03,
  0x00, 0x30, 0x00, 0xff, 0xff, 0x07,
  0x01, 0x30, 0x00, 0xff, 0xff, 0x0f,
  0x01, 0x30, 0x00, 0xff, 0xff, 0x1f,
  0x7f, 0x30, 0x00, 0xff, 0xff, 0x3f, 
  0x01, 0xf0, 0x00, 0xff, 0xff, 0x7f,
  0x01, 0xf0, 0x0f, 0xff, 0xff, 0x7f,
  0x00, 0x00, 0xff, 0xff, 0xff, 0x7f,
  0x7f, 0x00, 0xf0, 0xff, 0xff, 0x7f, # 60th column
  0x49, 0x00, 0x00, 0xff, 0xff, 0x7f,
  0x49, 0x00, 0x00, 0xff, 0xff, 0x7f,
  0x49, 0x00, 0x00, 0xff, 0xff, 0x3f,
  0x41, 0x00, 0x00, 0xff, 0xff, 0x1f,
  0x00, 0x00, 0x00, 0xff, 0xff, 0x0f,
  0x46, 0x00, 0x00, 0xff, 0xff, 0x07,
  0x49, 0x00, 0x00, 0xff, 0xff, 0x03,
  0x49, 0x00, 0x00, 0xff, 0xff, 0x01,
  0x49, 0x00, 0x00, 0xff, 0xff, 0x00,
  0x31, 0x00, 0x00, 0xff, 0xff, 0x00, # 70th column
  0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 
  0x01, 0x00, 0x00, 0xff, 0xff, 0x00,
  0x01, 0x00, 0x00, 0xff, 0xff, 0x00,
  0x7f, 0x00, 0x00, 0xff, 0xff, 0x00,
  0x01, 0x00, 0x00, 0xff, 0xff, 0x00,
  0x01, 0x00, 0x00, 0xff, 0xff, 0x00,
  0x00, 0x00, 0x00, 0xff, 0xff, 0x00,
  0x00, 0x00, 0x00, 0xf0, 0xff, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, # 80th column
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x5f, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x5f, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00
]

def setup():
  # Set pin directions.
  GPIO.setmode(GPIO.BCM)
  GPIO.setup(DC,GPIO.OUT)
  GPIO.setup(RST,GPIO.OUT)
  spi.open(0,0)
  spi.max_speed_hz=5000000

def gotoxy(x, y): 
  GPIO.output(DC, False)
  spi.writebytes([x+128,y+64])

def cls():
  gotoxy(0, 0)
  GPIO.output(DC, True)
  spi.writebytes(CLSBUF)

def init():
  setup()
  # Toggle RST low to reset.
  GPIO.output(RST, False)
  time.sleep(0.100)
  GPIO.output(RST, True)
  # Extended mode, bias, vop, basic mode, non-inverted display.
  GPIO.output(DC, False)
  spi.writebytes([0x21, 0x14, contrast, 0x20, 0x0c])

def lcd_data(value):
  GPIO.output(DC, True)
  spi.writebytes([value])

# Display image:
def load_image():
  gotoxy(0,0)
  for x in range(6): # Rop to bottom
    for y in range(84): # Left to Right
      lcd_data(image[y*6+x])

def main():
  init()
  cls()
  load_image() 
  print 'Nokia LCD Updated'
  print

if __name__ == '__main__':
  main()
